// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DatosMastro.Api.Migrations.AppDb
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GestionFlotas.AlertaMantenimiento", b =>
                {
                    b.Property<int>("AlertaMantenimientoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AlertaMantenimientoId"));

                    b.Property<int>("CamionId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaAlerta")
                        .HasColumnType("datetime2");

                    b.HasKey("AlertaMantenimientoId");

                    b.HasIndex("CamionId");

                    b.ToTable("AlertasMantenimientos");
                });

            modelBuilder.Entity("GestionFlotas.Camion", b =>
                {
                    b.Property<int>("CamionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CamionId"));

                    b.Property<int>("Anio")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("KilometrajeActual")
                        .HasColumnType("float");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CamionId");

                    b.ToTable("Camiones");
                });

            modelBuilder.Entity("GestionFlotas.Conductor", b =>
                {
                    b.Property<int>("ConductorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ConductorId"));

                    b.Property<int>("CamionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Licencia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ConductorId");

                    b.HasIndex("CamionId");

                    b.ToTable("Conductores");
                });

            modelBuilder.Entity("GestionFlotas.LecturaSensor", b =>
                {
                    b.Property<int>("LecturaSensorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LecturaSensorId"));

                    b.Property<int>("CamionId")
                        .HasColumnType("int");

                    b.Property<string>("EstadoCamion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("datetime2");

                    b.Property<double>("Kilometraje")
                        .HasColumnType("float");

                    b.HasKey("LecturaSensorId");

                    b.HasIndex("CamionId");

                    b.ToTable("LecturaSensor");
                });

            modelBuilder.Entity("GestionFlotas.Mantenimiento", b =>
                {
                    b.Property<int>("MantenimientoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MantenimientoId"));

                    b.Property<int>("CamionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaMantenimiento")
                        .HasColumnType("datetime2");

                    b.Property<int>("TallerId")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MantenimientoId");

                    b.HasIndex("CamionId");

                    b.HasIndex("TallerId");

                    b.ToTable("Mantenimientos");
                });

            modelBuilder.Entity("GestionFlotas.Taller", b =>
                {
                    b.Property<int>("TallerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TallerId"));

                    b.Property<int>("CapacidadMaxima")
                        .HasColumnType("int");

                    b.Property<string>("Cuidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TallerId");

                    b.ToTable("Talleres");
                });

            modelBuilder.Entity("GestionFlotas.AlertaMantenimiento", b =>
                {
                    b.HasOne("GestionFlotas.Camion", "Camion")
                        .WithMany("Alertas")
                        .HasForeignKey("CamionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Camion");
                });

            modelBuilder.Entity("GestionFlotas.Conductor", b =>
                {
                    b.HasOne("GestionFlotas.Camion", "Camion")
                        .WithMany("Conductores")
                        .HasForeignKey("CamionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Camion");
                });

            modelBuilder.Entity("GestionFlotas.LecturaSensor", b =>
                {
                    b.HasOne("GestionFlotas.Camion", null)
                        .WithMany("Lecturas")
                        .HasForeignKey("CamionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GestionFlotas.Mantenimiento", b =>
                {
                    b.HasOne("GestionFlotas.Camion", "Camion")
                        .WithMany("Mantenimientos")
                        .HasForeignKey("CamionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestionFlotas.Taller", "Taller")
                        .WithMany("Mantenimientos")
                        .HasForeignKey("TallerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Camion");

                    b.Navigation("Taller");
                });

            modelBuilder.Entity("GestionFlotas.Camion", b =>
                {
                    b.Navigation("Alertas");

                    b.Navigation("Conductores");

                    b.Navigation("Lecturas");

                    b.Navigation("Mantenimientos");
                });

            modelBuilder.Entity("GestionFlotas.Taller", b =>
                {
                    b.Navigation("Mantenimientos");
                });
#pragma warning restore 612, 618
        }
    }
}
